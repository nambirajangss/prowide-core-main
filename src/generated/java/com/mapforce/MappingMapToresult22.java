/**
 * MappingMapToresult22.java
 *
 * This file was generated by MapForce 2025r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import com.altova.text.tablelike.*;
import com.altova.text.*;
import com.altova.text.edi.*;
import java.util.*;

public class MappingMapToresult22 extends com.altova.TraceProvider {
	private boolean runDoesCloseAll = true;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}


	static class Main implements IEnumerable {
		com.altova.mapforce.IMFNode var1_MasterFieldsV5_Instance;

		public Main(com.altova.mapforce.IMFNode var1_MasterFieldsV5_Instance)	{
			this.var1_MasterFieldsV5_Instance = var1_MasterFieldsV5_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 2;
			Object current;
			Main closure;
			com.altova.mapforce.IEnumerable var2_as_object;
			boolean var3_any;
			boolean var4_any;

			public Enumerator(Main closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 0;				
				var2_as_object = new com.altova.functions.Core.SequenceCache(com.altova.functions.Json.AsObject(com.altova.functions.Json.RootValue(closure.var1_MasterFieldsV5_Instance)));
				var3_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq1_join(var2_as_object)))));
				var4_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq16_seq_(var3_any, var2_as_object)))));
				if (!((Boolean)com.altova.functions.Core.first((new seq20_if_any(var3_any, var4_any))))) {state = 0; return false; }
				current = (java.lang.String)com.altova.functions.Core.last((new seq21_if_any(var2_as_object, var4_any)));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq1_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq1_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq1_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq1_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq12_map(((com.altova.json.Value)(var4_tbf411_definitionsobject_09.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq2_join implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq2_join(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq2_join closure;
			IEnumerator var2_object_member_by_name;
			IEnumerator var3_as_object;
			IEnumerator var4_object_member_by_name;
			IEnumerator var5_as_object;
			IEnumerator var6_object_member_by_name;
			IEnumerator var7_as_object;

			public Enumerator(seq2_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "textBlock")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				var4_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var3_as_object.current())), "textBlockFields")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_object_member_by_name.moveNext()) {state = 7; return false; }
				var5_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var4_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_as_object.moveNext()) {state = 9; return false; }
				var6_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var5_as_object.current())), "sequenceA")).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_as_object != null ) { var5_as_object.close(); var5_as_object = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_object_member_by_name.moveNext()) {state = 11; return false; }
				var7_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var6_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_object_member_by_name != null ) { var6_object_member_by_name.close(); var6_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_as_object.moveNext()) {state = 13; return false; }
				current = var7_as_object.current();
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_as_object != null ) { var7_as_object.close(); var7_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var7_as_object != null ) { var7_as_object.close(); var7_as_object = null; }
					if( var6_object_member_by_name != null ) { var6_object_member_by_name.close(); var6_object_member_by_name = null; }
					if( var5_as_object != null ) { var5_as_object.close(); var5_as_object = null; }
					if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq3_join implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq3_join(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq3_join closure;
			IEnumerator var2_object_member_by_name;
			IEnumerator var3_as_object;
			IEnumerator var4_object_member_by_name;
			IEnumerator var5_as_string;

			public Enumerator(seq3_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "applicationHeaderBlock")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				var4_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var3_as_object.current())), "messageType")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_object_member_by_name.moveNext()) {state = 7; return false; }
				var5_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var4_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_as_string.moveNext()) {state = 9; return false; }
				current = com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equal(((java.lang.String)(var5_as_string.current())), "202"), com.altova.functions.Core.logicalNot((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq4_map(closure.var1_cur)))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_as_string != null ) { var5_as_string.close(); var5_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var5_as_string != null ) { var5_as_string.close(); var5_as_string = null; }
					if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq4_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq4_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq4_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq4_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "userHeaderBlock")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq5_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq5_map implements IEnumerable {
		com.altova.json.Member var1_current;

		public seq5_map(com.altova.json.Member var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq5_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq5_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq6_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq6_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq6_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq6_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq6_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "userHeaderBlockFields")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq7_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq7_map implements IEnumerable {
		com.altova.json.Member var1_current;

		public seq7_map(com.altova.json.Member var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq7_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq7_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq8_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq8_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq8_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq8_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq8_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field119")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq9_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq9_map implements IEnumerable {
		com.altova.json.Member var1_current;

		public seq9_map(com.altova.json.Member var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq9_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq9_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq10_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq10_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq10_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq10_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq10_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "validationFlag")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq11_CoreAny implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_sequence;

		public seq11_CoreAny(com.altova.mapforce.IEnumerable var1_sequence)	{
			this.var1_sequence = var1_sequence;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq11_CoreAny closure;
			IEnumerator var2_enum;

			public Enumerator(seq11_CoreAny closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_enum = (closure.var1_sequence).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_enum.moveNext()) {state = 3; return false; }
				if (!(((Boolean)(var2_enum.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq12_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq12_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq12_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq12_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq13_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq13_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq13_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq13_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq13_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54B")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq14_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq14_map implements IEnumerable {
		com.altova.json.Member var1_current;

		public seq14_map(com.altova.json.Member var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq14_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq14_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq15_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq15_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq15_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq15_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq15_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "location")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq16_seq_ implements IEnumerable {
		boolean var1_any;
		com.altova.mapforce.IEnumerable var2_as_object;

		public seq16_seq_(boolean var1_any, com.altova.mapforce.IEnumerable var2_as_object)	{
			this.var1_any = var1_any;
			this.var2_as_object = var2_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq16_seq_ closure;

			public Enumerator(seq16_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq17_join(closure.var2_as_object)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.logicalNot(closure.var1_any);
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq17_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq17_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq17_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq17_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq18_map(((com.altova.json.Value)(var4_tbf411_definitionsobject_09.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq18_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq18_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq18_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq18_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq19_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq19_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq19_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq19_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq19_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54B")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq20_if_any implements IEnumerable {
		boolean var1_any;
		boolean var2_any;

		public seq20_if_any(boolean var1_any, boolean var2_any)	{
			this.var1_any = var1_any;
			this.var2_any = var2_any;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq20_if_any closure;

			public Enumerator(seq20_if_any closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var2_any)) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_any;
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq21_if_any implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;
		boolean var2_any;

		public seq21_if_any(com.altova.mapforce.IEnumerable var1_as_object, boolean var2_any)	{
			this.var1_as_object = var1_as_object;
			this.var2_any = var2_any;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq21_if_any closure;
			IEnumerator var3_join;
			IEnumerator var4_as_object;
			IEnumerator var5_object_member_by_name;
			IEnumerator var6_as_object;
			IEnumerator var7_object_member_by_name;
			IEnumerator var8_as_string;

			public Enumerator(seq21_if_any closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
						case 14: if (moveNext_14()) return true; break;
						case 15: if (moveNext_15()) return true; break;
						case 16: if (moveNext_16()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var2_any)) {state = 2; return false; }
				current = "NOTPROVIDED";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 5;				
				var3_join = ((new seq22_join(closure.var1_as_object))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_join.moveNext()) {state = 6; return false; }
				var4_as_object = (com.altova.functions.Json.AsObject(((com.altova.json.Value)(var3_join.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				if( var3_join != null ) { var3_join.close(); var3_join = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_as_object.moveNext()) {state = 8; return false; }
				var5_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var4_as_object.current())), "field54B")).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_object_member_by_name.moveNext()) {state = 10; return false; }
				var6_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var5_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_object_member_by_name != null ) { var5_object_member_by_name.close(); var5_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_as_object.moveNext()) {state = 12; return false; }
				var7_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var6_as_object.current())), "location")).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_as_object != null ) { var6_as_object.close(); var6_as_object = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_object_member_by_name.moveNext()) {state = 14; return false; }
				var8_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var7_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_object_member_by_name != null ) { var7_object_member_by_name.close(); var7_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var8_as_string.moveNext()) {state = 16; return false; }
				current = var8_as_string.current();
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_as_string != null ) { var8_as_string.close(); var8_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var8_as_string != null ) { var8_as_string.close(); var8_as_string = null; }
					if( var7_object_member_by_name != null ) { var7_object_member_by_name.close(); var7_object_member_by_name = null; }
					if( var6_as_object != null ) { var6_as_object.close(); var6_as_object = null; }
					if( var5_object_member_by_name != null ) { var5_object_member_by_name.close(); var5_object_member_by_name = null; }
					if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
					if( var3_join != null ) { var3_join.close(); var3_join = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq22_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq22_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq22_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq22_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = var4_tbf411_definitionsobject_09.current();
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class Outer implements IEnumerable {
		com.altova.mapforce.IMFNode var1_MasterFieldsV5_Instance;

		public Outer(com.altova.mapforce.IMFNode var1_MasterFieldsV5_Instance)	{
			this.var1_MasterFieldsV5_Instance = var1_MasterFieldsV5_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			Outer closure;
			IEnumerator var2_as_object;

			public Enumerator(Outer closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = ((new Main(closure.var1_MasterFieldsV5_Instance))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = var2_as_object.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}


	// instances
	protected com.altova.json.Document varMasterFieldsV54Instance;

	public String run(String MasterFieldsV54SourceFilename) throws Exception {
		try(
			// open source streams
			com.altova.io.FileInput MasterFieldsV54Source = new com.altova.io.FileInput(MasterFieldsV54SourceFilename);

		) {
			// run
		String varresult22TargetParameter =		run(MasterFieldsV54Source);

			return varresult22TargetParameter;
		}
	}


	// main entry point

	public String run(com.altova.io.Input MasterFieldsV54Source) throws Exception {
		try {
			// Open the source(s)
				varMasterFieldsV54Instance = com.altova.functions.Json.Load(MasterFieldsV54Source, MapForceJsonLibs_MasterFieldsV5.Schemas, false, false);
				if (runDoesCloseAll)
					MasterFieldsV54Source.close();

			// Create the target

			// Execute mapping

			Main mapping = new Main(varMasterFieldsV54Instance);

			String varresult22TargetParameter = com.altova.functions.Core.last(mapping).toString();
			
			// Close the target

			return varresult22TargetParameter;

		}
		finally {

			if (runDoesCloseAll) {
				MasterFieldsV54Source.close();
			}

		}
	}


}
