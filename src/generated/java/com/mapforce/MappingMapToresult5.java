/**
 * MappingMapToresult5.java
 *
 * This file was generated by MapForce 2025r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import com.altova.text.tablelike.*;
import com.altova.text.*;
import com.altova.text.edi.*;
import java.util.*;

public class MappingMapToresult5 extends com.altova.TraceProvider {
	private boolean runDoesCloseAll = true;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}


	static class Main implements IEnumerable {
		com.altova.mapforce.IMFNode var1_MasterFieldsV5_Instance;

		public Main(com.altova.mapforce.IMFNode var1_MasterFieldsV5_Instance)	{
			this.var1_MasterFieldsV5_Instance = var1_MasterFieldsV5_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 2;
			Object current;
			Main closure;
			com.altova.mapforce.IEnumerable var2_as_object;
			boolean var3_any;
			boolean var4_any;
			boolean var5_any;
			boolean var6_logical_and;
			boolean var7_if_logical_and;
			boolean var8_any;
			com.altova.mapforce.IEnumerable var9_join;
			boolean var10_any;
			boolean var11_logical_and;
			boolean var12_if_logical_and;
			boolean var13_any;
			boolean var14_any;
			boolean var15_any;

			public Enumerator(Main closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 16: if (moveNext_16()) return true; break;
						case 17: if (moveNext_17()) return true; break;
						case 27: if (moveNext_27()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 0;				
				var2_as_object = new com.altova.functions.Core.SequenceCache(com.altova.functions.Json.AsObject(com.altova.functions.Json.RootValue(closure.var1_MasterFieldsV5_Instance)));
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq1_join(var2_as_object))))))) {state = 3; return false; }
				current = (java.lang.String)com.altova.functions.Core.last((new seq16_join(var2_as_object)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var3_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq18_join(var2_as_object)))));
				var4_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq21_join(var2_as_object)))));
				var5_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq24_join(var2_as_object)))));
				var6_logical_and = com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalNot(var3_any), com.altova.functions.Core.logicalNot(var4_any)), com.altova.functions.Core.logicalNot((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq27_join(var2_as_object))))))), var5_any), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq30_join(var2_as_object))))));
				var7_if_logical_and = (Boolean)com.altova.functions.Core.first((new seq35_if_logical_and(var6_logical_and, var2_as_object)));
				var8_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq41_seq_(var4_any, var7_if_logical_and)))));
				if (!((Boolean)com.altova.functions.Core.first((new seq42_if_any(var7_if_logical_and, var8_any))))) {state = 6; return false; }
				if (!(var8_any)) {state = 7; return false; }
				current = "NOTPROVIDED";
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var9_join = new com.altova.functions.Core.SequenceCache((new seq17_join(var2_as_object)));
				var10_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq44_join(var2_as_object, var9_join)))));
				var11_logical_and = com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd(var3_any, var4_any), var10_any);
				var12_if_logical_and = (Boolean)com.altova.functions.Core.first((new seq62_if_logical_and(var11_logical_and, var10_any)));
				var13_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq63_seq_(var4_any, var12_if_logical_and)))));
				if (!((Boolean)com.altova.functions.Core.first((new seq64_if_any(var13_any, var12_if_logical_and))))) {state = 16; return false; }
				if (!(var13_any)) {state = 17; return false; }
				current = "NOTPROVIDED";
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				if (!(var6_logical_and)) {state = 0; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq36_join(var2_as_object))))))) {state = 0; return false; }
				current = (java.lang.String)com.altova.functions.Core.last((new seq43_join(var2_as_object)));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				var14_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq76_join(var2_as_object)))));
				var15_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq91_seq_(var5_any, var14_any)))));
				if (!((Boolean)com.altova.functions.Core.first((new seq92_if_any(var14_any, var15_any))))) {state = 0; return false; }
				if (!(var15_any)) {state = 27; return false; }
				current = "NOTPROVIDED";
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 0;				
				if (!(var11_logical_and)) {state = 0; return false; }
				if (!(var10_any)) {state = 0; return false; }
				current = (java.lang.String)com.altova.functions.Core.last((new seq65_join(var2_as_object, var9_join)));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 0;				
				if (!(var14_any)) {state = 0; return false; }
				current = (java.lang.String)com.altova.functions.Core.last((new seq93_join(var9_join)));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq1_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq1_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq1_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq1_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq12_map(((com.altova.json.Value)(var4_tbf411_definitionsobject_09.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq2_join implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq2_join(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq2_join closure;
			IEnumerator var2_object_member_by_name;
			IEnumerator var3_as_object;
			IEnumerator var4_object_member_by_name;
			IEnumerator var5_as_object;
			IEnumerator var6_object_member_by_name;
			IEnumerator var7_as_object;

			public Enumerator(seq2_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "textBlock")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				var4_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var3_as_object.current())), "textBlockFields")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_object_member_by_name.moveNext()) {state = 7; return false; }
				var5_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var4_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_as_object.moveNext()) {state = 9; return false; }
				var6_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var5_as_object.current())), "sequenceA")).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_as_object != null ) { var5_as_object.close(); var5_as_object = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_object_member_by_name.moveNext()) {state = 11; return false; }
				var7_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var6_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_object_member_by_name != null ) { var6_object_member_by_name.close(); var6_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_as_object.moveNext()) {state = 13; return false; }
				current = var7_as_object.current();
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_as_object != null ) { var7_as_object.close(); var7_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var7_as_object != null ) { var7_as_object.close(); var7_as_object = null; }
					if( var6_object_member_by_name != null ) { var6_object_member_by_name.close(); var6_object_member_by_name = null; }
					if( var5_as_object != null ) { var5_as_object.close(); var5_as_object = null; }
					if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq3_join implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq3_join(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq3_join closure;
			IEnumerator var2_object_member_by_name;
			IEnumerator var3_as_object;
			IEnumerator var4_object_member_by_name;
			IEnumerator var5_as_string;

			public Enumerator(seq3_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "applicationHeaderBlock")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				var4_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var3_as_object.current())), "messageType")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_object_member_by_name.moveNext()) {state = 7; return false; }
				var5_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var4_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_as_string.moveNext()) {state = 9; return false; }
				current = com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equal(((java.lang.String)(var5_as_string.current())), "202"), com.altova.functions.Core.logicalNot((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq4_map(closure.var1_cur)))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_as_string != null ) { var5_as_string.close(); var5_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var5_as_string != null ) { var5_as_string.close(); var5_as_string = null; }
					if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq4_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq4_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq4_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq4_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "userHeaderBlock")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq5_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq5_map implements IEnumerable {
		com.altova.json.Member var1_current;

		public seq5_map(com.altova.json.Member var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq5_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq5_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq6_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq6_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq6_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq6_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq6_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "userHeaderBlockFields")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq7_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq7_map implements IEnumerable {
		com.altova.json.Member var1_current;

		public seq7_map(com.altova.json.Member var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq7_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq7_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq8_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq8_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq8_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq8_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq8_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field119")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq9_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq9_map implements IEnumerable {
		com.altova.json.Member var1_current;

		public seq9_map(com.altova.json.Member var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq9_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq9_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq10_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq10_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq10_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq10_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq10_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "validationFlag")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq11_CoreAny implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_sequence;

		public seq11_CoreAny(com.altova.mapforce.IEnumerable var1_sequence)	{
			this.var1_sequence = var1_sequence;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq11_CoreAny closure;
			IEnumerator var2_enum;

			public Enumerator(seq11_CoreAny closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_enum = (closure.var1_sequence).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_enum.moveNext()) {state = 3; return false; }
				if (!(((Boolean)(var2_enum.current())))) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_enum != null ) { var2_enum.close(); var2_enum = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq12_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq12_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq12_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq12_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq13_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq13_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq13_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq13_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq13_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54D")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq14_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq14_map implements IEnumerable {
		com.altova.json.Member var1_current;

		public seq14_map(com.altova.json.Member var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq14_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq14_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq15_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq15_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq15_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq15_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq15_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "nameAndAddress4")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq16_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq16_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq16_join closure;
			IEnumerator var2_join;
			IEnumerator var3_as_object;
			IEnumerator var4_object_member_by_name;
			IEnumerator var5_as_object;
			IEnumerator var6_object_member_by_name;
			IEnumerator var7_as_string;

			public Enumerator(seq16_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_join = ((new seq17_join(closure.var1_as_object))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_join.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(((com.altova.json.Value)(var2_join.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_join != null ) { var2_join.close(); var2_join = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				var4_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var3_as_object.current())), "field54D")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_object_member_by_name.moveNext()) {state = 7; return false; }
				var5_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var4_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_as_object.moveNext()) {state = 9; return false; }
				var6_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var5_as_object.current())), "nameAndAddress4")).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_as_object != null ) { var5_as_object.close(); var5_as_object = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_object_member_by_name.moveNext()) {state = 11; return false; }
				var7_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var6_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_object_member_by_name != null ) { var6_object_member_by_name.close(); var6_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_as_string.moveNext()) {state = 13; return false; }
				current = var7_as_string.current();
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_as_string != null ) { var7_as_string.close(); var7_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var7_as_string != null ) { var7_as_string.close(); var7_as_string = null; }
					if( var6_object_member_by_name != null ) { var6_object_member_by_name.close(); var6_object_member_by_name = null; }
					if( var5_as_object != null ) { var5_as_object.close(); var5_as_object = null; }
					if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_join != null ) { var2_join.close(); var2_join = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq17_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq17_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq17_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq17_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = var4_tbf411_definitionsobject_09.current();
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq18_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq18_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq18_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq18_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq19_map(((com.altova.json.Value)(var4_tbf411_definitionsobject_09.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq19_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq19_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq19_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq19_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq20_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq20_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq20_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq20_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq20_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53A")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq21_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq21_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq21_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq21_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq22_map(((com.altova.json.Value)(var4_tbf411_definitionsobject_09.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq22_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq22_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq22_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq22_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq23_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq23_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq23_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq23_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq23_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53B")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq24_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq24_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq24_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq24_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq25_map(((com.altova.json.Value)(var4_tbf411_definitionsobject_09.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq25_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq25_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq25_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq25_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq26_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq26_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq26_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq26_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq26_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54B")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq27_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq27_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq27_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq27_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq28_map(((com.altova.json.Value)(var4_tbf411_definitionsobject_09.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq28_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq28_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq28_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq28_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq29_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq29_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq29_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq29_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq29_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53D")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq30_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq30_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq30_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq30_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq31_map(((com.altova.json.Value)(var4_tbf411_definitionsobject_09.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq31_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq31_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq31_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq31_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq32_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq32_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq32_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq32_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq32_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54B")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq33_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq33_map implements IEnumerable {
		com.altova.json.Member var1_current;

		public seq33_map(com.altova.json.Member var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq33_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq33_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq34_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq34_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq34_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq34_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq34_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "account")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq35_if_logical_and implements IEnumerable {
		boolean var1_logical_and;
		com.altova.mapforce.IEnumerable var2_as_object;

		public seq35_if_logical_and(boolean var1_logical_and, com.altova.mapforce.IEnumerable var2_as_object)	{
			this.var1_logical_and = var1_logical_and;
			this.var2_as_object = var2_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq35_if_logical_and closure;

			public Enumerator(seq35_if_logical_and closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var1_logical_and)) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq36_join(closure.var2_as_object)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq36_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq36_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq36_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq36_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq37_map(((com.altova.json.Value)(var4_tbf411_definitionsobject_09.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq37_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq37_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq37_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq37_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq38_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq38_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq38_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq38_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq38_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54B")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq39_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq39_map implements IEnumerable {
		com.altova.json.Member var1_current;

		public seq39_map(com.altova.json.Member var1_current)	{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq39_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq39_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq40_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq40_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq40_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq40_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq40_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "location")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq41_seq_ implements IEnumerable {
		boolean var1_any;
		boolean var2_if_logical_and;

		public seq41_seq_(boolean var1_any, boolean var2_if_logical_and)	{
			this.var1_any = var1_any;
			this.var2_if_logical_and = var2_if_logical_and;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq41_seq_ closure;

			public Enumerator(seq41_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_any;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.logicalNot(closure.var2_if_logical_and);
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq42_if_any implements IEnumerable {
		boolean var1_if_logical_and;
		boolean var2_any;

		public seq42_if_any(boolean var1_if_logical_and, boolean var2_any)	{
			this.var1_if_logical_and = var1_if_logical_and;
			this.var2_any = var2_any;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq42_if_any closure;

			public Enumerator(seq42_if_any closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var2_any)) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_if_logical_and;
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq43_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq43_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq43_join closure;
			IEnumerator var2_join;
			IEnumerator var3_as_object;
			IEnumerator var4_object_member_by_name;
			IEnumerator var5_as_object;
			IEnumerator var6_object_member_by_name;
			IEnumerator var7_as_string;

			public Enumerator(seq43_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_join = ((new seq17_join(closure.var1_as_object))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_join.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(((com.altova.json.Value)(var2_join.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_join != null ) { var2_join.close(); var2_join = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				var4_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var3_as_object.current())), "field54B")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_object_member_by_name.moveNext()) {state = 7; return false; }
				var5_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var4_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_as_object.moveNext()) {state = 9; return false; }
				var6_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var5_as_object.current())), "location")).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_as_object != null ) { var5_as_object.close(); var5_as_object = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_object_member_by_name.moveNext()) {state = 11; return false; }
				var7_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var6_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_object_member_by_name != null ) { var6_object_member_by_name.close(); var6_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_as_string.moveNext()) {state = 13; return false; }
				current = var7_as_string.current();
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_as_string != null ) { var7_as_string.close(); var7_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var7_as_string != null ) { var7_as_string.close(); var7_as_string = null; }
					if( var6_object_member_by_name != null ) { var6_object_member_by_name.close(); var6_object_member_by_name = null; }
					if( var5_as_object != null ) { var5_as_object.close(); var5_as_object = null; }
					if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_join != null ) { var2_join.close(); var2_join = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq44_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;
		com.altova.mapforce.IEnumerable var2_join;

		public seq44_join(com.altova.mapforce.IEnumerable var1_as_object, com.altova.mapforce.IEnumerable var2_join)	{
			this.var1_as_object = var1_as_object;
			this.var2_join = var2_join;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq44_join closure;
			IEnumerator var3_join;
			IEnumerator var4_as_object;
			IEnumerator var5_filter;

			public Enumerator(seq44_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_join = (closure.var2_join).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_join.moveNext()) {state = 3; return false; }
				var4_as_object = (com.altova.functions.Json.AsObject(((com.altova.json.Value)(var3_join.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_join != null ) { var3_join.close(); var3_join = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_as_object.moveNext()) {state = 5; return false; }
				var5_filter = ((new seq45_join(((com.altova.json.Value)(var4_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				if (!(com.altova.functions.Core.logicalNot((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq46_join(((com.altova.json.Value)(var4_as_object.current())), closure.var1_as_object)))))))) {state = 6; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq60_map()))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}


			public void close() {
				try {
					if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
					if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
					if( var3_join != null ) { var3_join.close(); var3_join = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq45_join implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq45_join(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq45_join closure;
			IEnumerator var2_object_member_by_name;
			IEnumerator var3_as_object;

			public Enumerator(seq45_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53B")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				current = var3_as_object.current();
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq46_join implements IEnumerable {
		com.altova.json.Value var1_cur;
		com.altova.mapforce.IEnumerable var2_as_object;

		public seq46_join(com.altova.json.Value var1_cur, com.altova.mapforce.IEnumerable var2_as_object)	{
			this.var1_cur = var1_cur;
			this.var2_as_object = var2_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq46_join closure;
			IEnumerator var3_object_member_by_name;
			IEnumerator var4_as_object;
			IEnumerator var5_object_member_by_name;
			IEnumerator var6_as_string;
			IEnumerator var7_filter;
			IEnumerator var8_last;

			public Enumerator(seq46_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53A")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_object_member_by_name.moveNext()) {state = 3; return false; }
				var4_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var3_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_as_object.moveNext()) {state = 5; return false; }
				var5_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var4_as_object.current())), "identifierCode")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_object_member_by_name.moveNext()) {state = 7; return false; }
				var6_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var5_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_object_member_by_name != null ) { var5_object_member_by_name.close(); var5_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var6_as_string.moveNext()) {state = 9; return false; }
				var7_filter = ((new seq47_join(closure.var2_as_object))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_as_string != null ) { var6_as_string.close(); var6_as_string = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq52_if_logical_and(closure.var1_cur, ((com.altova.json.Value)(var4_as_object.current()))))))) {state = 10; return false; }
				var8_last = ((new seq56_last(closure.var1_cur, ((java.lang.String)(var6_as_string.current())), ((com.altova.json.Value)(var4_as_object.current())), ((java.lang.String)(var7_filter.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var8_last.moveNext()) {state = 13; return false; }
				current = com.altova.CoreTypes.parseBoolean(((java.lang.String)(var8_last.current())));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var8_last != null ) { var8_last.close(); var8_last = null; }
				return false;
			}


			public void close() {
				try {
					if( var8_last != null ) { var8_last.close(); var8_last = null; }
					if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
					if( var6_as_string != null ) { var6_as_string.close(); var6_as_string = null; }
					if( var5_object_member_by_name != null ) { var5_object_member_by_name.close(); var5_object_member_by_name = null; }
					if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
					if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq47_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq47_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq47_join closure;
			IEnumerator var2_join;
			IEnumerator var3_as_object;
			IEnumerator var4_object_member_by_name;
			IEnumerator var5_as_string;

			public Enumerator(seq47_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_join = ((new seq48_join(closure.var1_as_object))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_join.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(((com.altova.json.Value)(var2_join.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_join != null ) { var2_join.close(); var2_join = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				var4_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var3_as_object.current())), "MIRLogicalTerminal")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_object_member_by_name.moveNext()) {state = 7; return false; }
				var5_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var4_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_as_string.moveNext()) {state = 9; return false; }
				current = var5_as_string.current();
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_as_string != null ) { var5_as_string.close(); var5_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var5_as_string != null ) { var5_as_string.close(); var5_as_string = null; }
					if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_join != null ) { var2_join.close(); var2_join = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq48_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq48_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq48_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf412_bject_15propertiesapplicationHeaderBlock;

			public Enumerator(seq48_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq49_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq50_join(((com.altova.json.Value)(var3_filter.current())), ((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf412_bject_15propertiesapplicationHeaderBlock = (com.mapforce.tbf.tbf412_bject_15propertiesapplicationHeaderBlock.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf412_bject_15propertiesapplicationHeaderBlock.moveNext()) {state = 7; return false; }
				current = var4_tbf412_bject_15propertiesapplicationHeaderBlock.current();
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf412_bject_15propertiesapplicationHeaderBlock != null ) { var4_tbf412_bject_15propertiesapplicationHeaderBlock.close(); var4_tbf412_bject_15propertiesapplicationHeaderBlock = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf412_bject_15propertiesapplicationHeaderBlock != null ) { var4_tbf412_bject_15propertiesapplicationHeaderBlock.close(); var4_tbf412_bject_15propertiesapplicationHeaderBlock = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq49_join implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq49_join(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq49_join closure;
			IEnumerator var2_object_member_by_name;
			IEnumerator var3_as_object;

			public Enumerator(seq49_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "applicationHeaderBlock")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				current = var3_as_object.current();
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq50_join implements IEnumerable {
		com.altova.json.Value var1_cur;
		com.altova.json.Value var2_cur;

		public seq50_join(com.altova.json.Value var1_cur, com.altova.json.Value var2_cur)	{
			this.var1_cur = var1_cur;
			this.var2_cur = var2_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq50_join closure;
			IEnumerator var3_object_member_by_name;
			IEnumerator var4_as_string;

			public Enumerator(seq50_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "messageType")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_object_member_by_name.moveNext()) {state = 3; return false; }
				var4_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var3_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var4_as_string.moveNext()) {state = 5; return false; }
				current = com.altova.functions.Core.logicalAnd(com.altova.functions.Core.equal(((java.lang.String)(var4_as_string.current())), "202"), com.altova.functions.Core.logicalNot((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq51_map(closure.var2_cur)))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_as_string != null ) { var4_as_string.close(); var4_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_as_string != null ) { var4_as_string.close(); var4_as_string = null; }
					if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq51_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq51_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq51_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq51_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "userHeaderBlock")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq5_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq52_if_logical_and implements IEnumerable {
		com.altova.json.Value var1_cur;
		com.altova.json.Value var2_cur;

		public seq52_if_logical_and(com.altova.json.Value var1_cur, com.altova.json.Value var2_cur)	{
			this.var1_cur = var1_cur;
			this.var2_cur = var2_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq52_if_logical_and closure;

			public Enumerator(seq52_if_logical_and closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq53_map(closure.var1_cur))))), com.altova.CoreTypes.parseBoolean("true")), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq54_map(closure.var1_cur)))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq55_map(closure.var2_cur)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq53_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq53_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq53_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq53_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53A")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq54_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq54_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq54_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq54_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53A")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq33_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq55_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq55_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq55_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq55_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "account")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq56_last implements IEnumerable {
		com.altova.json.Value var1_cur;
		java.lang.String var2_cur;
		com.altova.json.Value var3_cur;
		java.lang.String var4_cur;

		public seq56_last(com.altova.json.Value var1_cur, java.lang.String var2_cur, com.altova.json.Value var3_cur, java.lang.String var4_cur)	{
			this.var1_cur = var1_cur;
			this.var2_cur = var2_cur;
			this.var3_cur = var3_cur;
			this.var4_cur = var4_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq56_last closure;
			java.lang.String var5_last;

			public Enumerator(seq56_last closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var5_last = (java.lang.String)com.altova.functions.Core.last((new seq57_if_logical_and(closure.var1_cur, closure.var3_cur)));
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq53_map(closure.var1_cur))))), com.altova.CoreTypes.parseBoolean("true")), com.altova.functions.Core.equal(com.altova.functions.Core.substring(closure.var2_cur, com.altova.CoreTypes.parseDouble("1"), com.altova.CoreTypes.parseDouble("6")), com.altova.functions.Core.substring(closure.var4_cur, com.altova.CoreTypes.parseDouble("1"), com.altova.CoreTypes.parseDouble("6")))), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq58_seq_(var5_last)))))))) {state = 2; return false; }
				current = "true";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq53_map(closure.var1_cur))))), com.altova.CoreTypes.parseBoolean("true")), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq59_seq_(closure.var1_cur, var5_last)))))))) {state = 0; return false; }
				current = "false";
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq57_if_logical_and implements IEnumerable {
		com.altova.json.Value var1_cur;
		com.altova.json.Value var2_cur;

		public seq57_if_logical_and(com.altova.json.Value var1_cur, com.altova.json.Value var2_cur)	{
			this.var1_cur = var1_cur;
			this.var2_cur = var2_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq57_if_logical_and closure;
			IEnumerator var3_object_member_by_name;
			IEnumerator var4_as_string;

			public Enumerator(seq57_if_logical_and closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq53_map(closure.var1_cur))))), com.altova.CoreTypes.parseBoolean("true")), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq54_map(closure.var1_cur)))))))) {state = 2; return false; }
				var3_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var2_cur, "account")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = "IsAccount";
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_object_member_by_name.moveNext()) {state = 4; return false; }
				var4_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var3_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var4_as_string.moveNext()) {state = 6; return false; }
				current = var4_as_string.current();
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_as_string != null ) { var4_as_string.close(); var4_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_as_string != null ) { var4_as_string.close(); var4_as_string = null; }
					if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq58_seq_ implements IEnumerable {
		java.lang.String var1_cur;

		public seq58_seq_(java.lang.String var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq58_seq_ closure;

			public Enumerator(seq58_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.logicalNot(com.altova.functions.Core.startsWith(closure.var1_cur, "/"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.startsWith(closure.var1_cur, "/CH");
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq59_seq_ implements IEnumerable {
		com.altova.json.Value var1_cur;
		java.lang.String var2_cur;

		public seq59_seq_(com.altova.json.Value var1_cur, java.lang.String var2_cur)	{
			this.var1_cur = var1_cur;
			this.var2_cur = var2_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq59_seq_ closure;

			public Enumerator(seq59_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.logicalNot((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq54_map(closure.var1_cur))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.logicalNot((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq58_seq_(closure.var2_cur))))));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq60_map implements IEnumerable {

		public seq60_map()	{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq60_map closure;
			IEnumerator var1_as_object;

			public Enumerator(seq60_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var1_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.CreateObject((new seq61_seq_())))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var1_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq40_map(((com.altova.json.Value)(var1_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var1_as_object != null ) { var1_as_object.close(); var1_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var1_as_object != null ) { var1_as_object.close(); var1_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq61_seq_ implements IEnumerable {

		public seq61_seq_()	{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq61_seq_ closure;

			public Enumerator(seq61_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				return false;
			}


			public void close() {
			}
		}
	}
	static class seq62_if_logical_and implements IEnumerable {
		boolean var1_logical_and;
		boolean var2_any;

		public seq62_if_logical_and(boolean var1_logical_and, boolean var2_any)	{
			this.var1_logical_and = var1_logical_and;
			this.var2_any = var2_any;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq62_if_logical_and closure;

			public Enumerator(seq62_if_logical_and closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var1_logical_and)) {state = 2; return false; }
				current = closure.var2_any;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq63_seq_ implements IEnumerable {
		boolean var1_any;
		boolean var2_if_logical_and;

		public seq63_seq_(boolean var1_any, boolean var2_if_logical_and)	{
			this.var1_any = var1_any;
			this.var2_if_logical_and = var2_if_logical_and;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq63_seq_ closure;

			public Enumerator(seq63_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_any;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.logicalNot(closure.var2_if_logical_and);
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq64_if_any implements IEnumerable {
		boolean var1_any;
		boolean var2_if_logical_and;

		public seq64_if_any(boolean var1_any, boolean var2_if_logical_and)	{
			this.var1_any = var1_any;
			this.var2_if_logical_and = var2_if_logical_and;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq64_if_any closure;

			public Enumerator(seq64_if_any closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var1_any)) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var2_if_logical_and;
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq65_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;
		com.altova.mapforce.IEnumerable var2_join;

		public seq65_join(com.altova.mapforce.IEnumerable var1_as_object, com.altova.mapforce.IEnumerable var2_join)	{
			this.var1_as_object = var1_as_object;
			this.var2_join = var2_join;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq65_join closure;
			IEnumerator var3_join;
			IEnumerator var4_as_object;
			IEnumerator var5_object_member_by_name;
			IEnumerator var6_as_string;

			public Enumerator(seq65_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_join = ((new seq66_join(closure.var1_as_object, closure.var2_join))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_join.moveNext()) {state = 3; return false; }
				var4_as_object = (com.altova.functions.Json.AsObject(((com.altova.json.Value)(var3_join.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_join != null ) { var3_join.close(); var3_join = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_as_object.moveNext()) {state = 5; return false; }
				var5_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var4_as_object.current())), "location")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_object_member_by_name.moveNext()) {state = 7; return false; }
				var6_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var5_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_object_member_by_name != null ) { var5_object_member_by_name.close(); var5_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var6_as_string.moveNext()) {state = 9; return false; }
				current = var6_as_string.current();
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_as_string != null ) { var6_as_string.close(); var6_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var6_as_string != null ) { var6_as_string.close(); var6_as_string = null; }
					if( var5_object_member_by_name != null ) { var5_object_member_by_name.close(); var5_object_member_by_name = null; }
					if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
					if( var3_join != null ) { var3_join.close(); var3_join = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq66_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;
		com.altova.mapforce.IEnumerable var2_join;

		public seq66_join(com.altova.mapforce.IEnumerable var1_as_object, com.altova.mapforce.IEnumerable var2_join)	{
			this.var1_as_object = var1_as_object;
			this.var2_join = var2_join;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq66_join closure;
			IEnumerator var3_join;
			IEnumerator var4_as_object;
			IEnumerator var5_filter;
			com.altova.mapforce.IEnumerable var6_object_member_by_name;

			public Enumerator(seq66_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_join = (closure.var2_join).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_join.moveNext()) {state = 3; return false; }
				var4_as_object = (com.altova.functions.Json.AsObject(((com.altova.json.Value)(var3_join.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_join != null ) { var3_join.close(); var3_join = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_as_object.moveNext()) {state = 5; return false; }
				var5_filter = ((new seq67_join(((com.altova.json.Value)(var4_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var5_filter.moveNext()) {state = 7; return false; }
				var6_object_member_by_name = new com.altova.functions.Core.SequenceCache(com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var4_as_object.current())), "field53A"));
				if (!(com.altova.functions.Core.logicalNot((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq68_join(closure.var1_as_object, var6_object_member_by_name)))))))) {state = 6; return false; }
				current = com.altova.functions.Json.CreateObject((new seq61_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
				return false;
			}


			public void close() {
				try {
					if( var5_filter != null ) { var5_filter.close(); var5_filter = null; }
					if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
					if( var3_join != null ) { var3_join.close(); var3_join = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq67_join implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq67_join(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq67_join closure;
			IEnumerator var2_object_member_by_name;
			IEnumerator var3_as_object;

			public Enumerator(seq67_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53B")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				current = var3_as_object.current();
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq68_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;
		com.altova.mapforce.IEnumerable var2_object_member_by_name;

		public seq68_join(com.altova.mapforce.IEnumerable var1_as_object, com.altova.mapforce.IEnumerable var2_object_member_by_name)	{
			this.var1_as_object = var1_as_object;
			this.var2_object_member_by_name = var2_object_member_by_name;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq68_join closure;
			IEnumerator var3_object_member_by_name;
			IEnumerator var4_as_object;
			IEnumerator var5_object_member_by_name;
			IEnumerator var6_as_string;
			IEnumerator var7_filter;
			boolean var8_logical_and;
			boolean var9_any;
			java.lang.String var10_last;
			double var11_cast;
			double var12_cast;
			IEnumerator var13_last;

			public Enumerator(seq68_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_object_member_by_name = (closure.var2_object_member_by_name).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var3_object_member_by_name.moveNext()) {state = 3; return false; }
				var4_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var3_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var4_as_object.moveNext()) {state = 5; return false; }
				var5_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var4_as_object.current())), "identifierCode")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var5_object_member_by_name.moveNext()) {state = 7; return false; }
				var6_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var5_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var5_object_member_by_name != null ) { var5_object_member_by_name.close(); var5_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var6_as_string.moveNext()) {state = 9; return false; }
				var7_filter = ((new seq47_join(closure.var1_as_object))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var6_as_string != null ) { var6_as_string.close(); var6_as_string = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var7_filter.moveNext()) {state = 11; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq69_if_logical_and(((com.altova.json.Value)(var4_as_object.current())), closure.var2_object_member_by_name))))) {state = 10; return false; }
				var8_logical_and = com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq70_map(closure.var2_object_member_by_name))))), com.altova.CoreTypes.parseBoolean("true"));
				var9_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq71_map(closure.var2_object_member_by_name)))));
				var10_last = (java.lang.String)com.altova.functions.Core.last((new seq72_if_logical_and(((com.altova.json.Value)(var4_as_object.current())), var9_any, var8_logical_and)));
				var11_cast = com.altova.CoreTypes.parseDouble("1");
				var12_cast = com.altova.CoreTypes.parseDouble("6");
				var13_last = ((new seq73_any(((java.lang.String)(var6_as_string.current())), var12_cast, var9_any, var8_logical_and, var11_cast, ((java.lang.String)(var7_filter.current())), var10_last))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var13_last.moveNext()) {state = 13; return false; }
				current = com.altova.CoreTypes.parseBoolean(((java.lang.String)(var13_last.current())));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var13_last != null ) { var13_last.close(); var13_last = null; }
				return false;
			}


			public void close() {
				try {
					if( var13_last != null ) { var13_last.close(); var13_last = null; }
					if( var7_filter != null ) { var7_filter.close(); var7_filter = null; }
					if( var6_as_string != null ) { var6_as_string.close(); var6_as_string = null; }
					if( var5_object_member_by_name != null ) { var5_object_member_by_name.close(); var5_object_member_by_name = null; }
					if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
					if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq69_if_logical_and implements IEnumerable {
		com.altova.json.Value var1_cur;
		com.altova.mapforce.IEnumerable var2_object_member_by_name;

		public seq69_if_logical_and(com.altova.json.Value var1_cur, com.altova.mapforce.IEnumerable var2_object_member_by_name)	{
			this.var1_cur = var1_cur;
			this.var2_object_member_by_name = var2_object_member_by_name;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq69_if_logical_and closure;

			public Enumerator(seq69_if_logical_and closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq70_map(closure.var2_object_member_by_name))))), com.altova.CoreTypes.parseBoolean("true")), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq71_map(closure.var2_object_member_by_name)))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq55_map(closure.var1_cur)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq70_map implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_object_member_by_name;

		public seq70_map(com.altova.mapforce.IEnumerable var1_object_member_by_name)	{
			this.var1_object_member_by_name = var1_object_member_by_name;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq70_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq70_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (closure.var1_object_member_by_name).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq71_map implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_object_member_by_name;

		public seq71_map(com.altova.mapforce.IEnumerable var1_object_member_by_name)	{
			this.var1_object_member_by_name = var1_object_member_by_name;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq71_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq71_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (closure.var1_object_member_by_name).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq33_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq72_if_logical_and implements IEnumerable {
		com.altova.json.Value var1_cur;
		boolean var2_any;
		boolean var3_logical_and;

		public seq72_if_logical_and(com.altova.json.Value var1_cur, boolean var2_any, boolean var3_logical_and)	{
			this.var1_cur = var1_cur;
			this.var2_any = var2_any;
			this.var3_logical_and = var3_logical_and;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq72_if_logical_and closure;
			IEnumerator var4_object_member_by_name;
			IEnumerator var5_as_string;

			public Enumerator(seq72_if_logical_and closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.logicalAnd(closure.var3_logical_and, closure.var2_any))) {state = 2; return false; }
				var4_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "account")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = "IsAccount";
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var4_object_member_by_name.moveNext()) {state = 4; return false; }
				var5_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var4_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var5_as_string.moveNext()) {state = 6; return false; }
				current = var5_as_string.current();
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var5_as_string != null ) { var5_as_string.close(); var5_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var5_as_string != null ) { var5_as_string.close(); var5_as_string = null; }
					if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq73_any implements IEnumerable {
		java.lang.String var1_cur;
		double var2_cast;
		boolean var3_any;
		boolean var4_logical_and;
		double var5_cast;
		java.lang.String var6_cur;
		java.lang.String var7_cur;

		public seq73_any(java.lang.String var1_cur, double var2_cast, boolean var3_any, boolean var4_logical_and, double var5_cast, java.lang.String var6_cur, java.lang.String var7_cur)	{
			this.var1_cur = var1_cur;
			this.var2_cast = var2_cast;
			this.var3_any = var3_any;
			this.var4_logical_and = var4_logical_and;
			this.var5_cast = var5_cast;
			this.var6_cur = var6_cur;
			this.var7_cur = var7_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq73_any closure;
			boolean var8_any;

			public Enumerator(seq73_any closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var8_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq74_seq_(closure.var7_cur)))));
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd(closure.var4_logical_and, com.altova.functions.Core.equal(com.altova.functions.Core.substring(closure.var1_cur, closure.var5_cast, closure.var2_cast), com.altova.functions.Core.substring(closure.var6_cur, closure.var5_cast, closure.var2_cast))), var8_any))) {state = 2; return false; }
				current = "true";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.logicalAnd(closure.var4_logical_and, (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq75_seq_(closure.var3_any, var8_any)))))))) {state = 0; return false; }
				current = "false";
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq74_seq_ implements IEnumerable {
		java.lang.String var1_cur;

		public seq74_seq_(java.lang.String var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq74_seq_ closure;

			public Enumerator(seq74_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.logicalNot(com.altova.functions.Core.startsWith(closure.var1_cur, "/"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.startsWith(closure.var1_cur, "/CH");
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq75_seq_ implements IEnumerable {
		boolean var1_any;
		boolean var2_any;

		public seq75_seq_(boolean var1_any, boolean var2_any)	{
			this.var1_any = var1_any;
			this.var2_any = var2_any;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq75_seq_ closure;

			public Enumerator(seq75_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.logicalNot(closure.var1_any);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.logicalNot(closure.var2_any);
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq76_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_as_object;

		public seq76_join(com.altova.mapforce.IEnumerable var1_as_object)	{
			this.var1_as_object = var1_as_object;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq76_join closure;
			IEnumerator var2_as_object;
			IEnumerator var3_filter;
			IEnumerator var4_tbf411_definitionsobject_09;

			public Enumerator(seq76_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (closure.var1_as_object).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				var3_filter = ((new seq2_join(((com.altova.json.Value)(var2_as_object.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_filter.moveNext()) {state = 5; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq3_join(((com.altova.json.Value)(var2_as_object.current()))))))))) {state = 4; return false; }
				var4_tbf411_definitionsobject_09 = (com.mapforce.tbf.tbf411_definitionsobject_09.eval(((com.altova.json.Value)(var3_filter.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 6;				
				if (!var4_tbf411_definitionsobject_09.moveNext()) {state = 7; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq77_map(((com.altova.json.Value)(var4_tbf411_definitionsobject_09.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
				return false;
			}


			public void close() {
				try {
					if( var4_tbf411_definitionsobject_09 != null ) { var4_tbf411_definitionsobject_09.close(); var4_tbf411_definitionsobject_09 = null; }
					if( var3_filter != null ) { var3_filter.close(); var3_filter = null; }
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq77_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq77_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq77_map closure;
			IEnumerator var2_as_object;

			public Enumerator(seq77_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = (com.altova.functions.Json.AsObject(closure.var1_cur)).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq78_map(((com.altova.json.Value)(var2_as_object.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq78_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq78_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq78_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq78_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54B")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq79_map(((com.altova.json.Member)(var2_object_member_by_name.current())), closure.var1_cur)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq79_map implements IEnumerable {
		com.altova.json.Member var1_current;
		com.altova.json.Value var2_cur;

		public seq79_map(com.altova.json.Member var1_current, com.altova.json.Value var2_cur)	{
			this.var1_current = var1_current;
			this.var2_cur = var2_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq79_map closure;
			IEnumerator var3_as_object;

			public Enumerator(seq79_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_as_object.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq80_map(((com.altova.json.Value)(var3_as_object.current())), closure.var2_cur)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq80_map implements IEnumerable {
		com.altova.json.Value var1_cur;
		com.altova.json.Value var2_cur;

		public seq80_map(com.altova.json.Value var1_cur, com.altova.json.Value var2_cur)	{
			this.var1_cur = var1_cur;
			this.var2_cur = var2_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq80_map closure;
			IEnumerator var3_object_member_by_name;

			public Enumerator(seq80_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "location")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq81_map(((com.altova.json.Member)(var3_object_member_by_name.current())), closure.var2_cur)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq81_map implements IEnumerable {
		com.altova.json.Member var1_current;
		com.altova.json.Value var2_cur;

		public seq81_map(com.altova.json.Member var1_current, com.altova.json.Value var2_cur)	{
			this.var1_current = var1_current;
			this.var2_cur = var2_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq81_map closure;
			IEnumerator var3_as_string;

			public Enumerator(seq81_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(closure.var1_current))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var3_as_string.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.logicalNot((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq82_cond_map(closure.var2_cur))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var3_as_string != null ) { var3_as_string.close(); var3_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var3_as_string != null ) { var3_as_string.close(); var3_as_string = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq82_cond_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq82_cond_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq82_cond_map closure;
			IEnumerator var2_if_any;

			public Enumerator(seq82_cond_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!((Boolean)com.altova.functions.Core.first((new seq83_if_logical_and(closure.var1_cur))))) {state = 0; return false; }
				var2_if_any = ((new seq88_if_any(closure.var1_cur))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var2_if_any.moveNext()) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean(((java.lang.String)(var2_if_any.current())));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_if_any != null ) { var2_if_any.close(); var2_if_any = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_if_any != null ) { var2_if_any.close(); var2_if_any = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq83_if_logical_and implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq83_if_logical_and(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq83_if_logical_and closure;

			public Enumerator(seq83_if_logical_and closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq84_map(closure.var1_cur))))), com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq85_map(closure.var1_cur))))), com.altova.CoreTypes.parseBoolean("true")), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq86_map(closure.var1_cur))))))), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq87_map(closure.var1_cur)))))))) {state = 2; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq87_map(closure.var1_cur)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq84_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq84_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq84_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq84_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53D")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq85_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq85_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq85_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq85_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54A")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq86_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq86_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq86_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq86_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54D")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq87_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq87_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq87_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq87_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53D")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq33_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq88_if_any implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq88_if_any(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq88_if_any closure;

			public Enumerator(seq88_if_any closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq89_last(closure.var1_cur))))))) {state = 2; return false; }
				current = "true";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq84_map(closure.var1_cur))))), com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq85_map(closure.var1_cur))))), com.altova.CoreTypes.parseBoolean("true")), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq86_map(closure.var1_cur))))))), com.altova.CoreTypes.parseBoolean("true")))) {state = 0; return false; }
				current = "false";
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq89_last implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq89_last(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq89_last closure;
			java.lang.String var2_last;

			public Enumerator(seq89_last closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_last = (java.lang.String)com.altova.functions.Core.last((new seq90_if_logical_and(closure.var1_cur)));
				current = com.altova.functions.Core.logicalNot(com.altova.functions.Core.startsWith(var2_last, "/"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.startsWith(var2_last, "/CH");
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq90_if_logical_and implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq90_if_logical_and(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq90_if_logical_and closure;
			IEnumerator var2_object_member_by_name;
			IEnumerator var3_as_object;
			IEnumerator var4_object_member_by_name;
			IEnumerator var5_as_string;

			public Enumerator(seq90_if_logical_and closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq84_map(closure.var1_cur))))), com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq85_map(closure.var1_cur))))), com.altova.CoreTypes.parseBoolean("true")), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq86_map(closure.var1_cur))))))), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq87_map(closure.var1_cur)))))))) {state = 2; return false; }
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field53D")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = "IsAccount";
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_object_member_by_name.moveNext()) {state = 4; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_as_object.moveNext()) {state = 6; return false; }
				var4_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var3_as_object.current())), "account")).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_object_member_by_name.moveNext()) {state = 8; return false; }
				var5_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var4_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_as_string.moveNext()) {state = 10; return false; }
				current = var5_as_string.current();
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_as_string != null ) { var5_as_string.close(); var5_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var5_as_string != null ) { var5_as_string.close(); var5_as_string = null; }
					if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq91_seq_ implements IEnumerable {
		boolean var1_any;
		boolean var2_any;

		public seq91_seq_(boolean var1_any, boolean var2_any)	{
			this.var1_any = var1_any;
			this.var2_any = var2_any;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq91_seq_ closure;

			public Enumerator(seq91_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = closure.var1_any;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.logicalNot(closure.var2_any);
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq92_if_any implements IEnumerable {
		boolean var1_any;
		boolean var2_any;

		public seq92_if_any(boolean var1_any, boolean var2_any)	{
			this.var1_any = var1_any;
			this.var2_any = var2_any;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq92_if_any closure;

			public Enumerator(seq92_if_any closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var2_any)) {state = 2; return false; }
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = closure.var1_any;
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq93_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_join;

		public seq93_join(com.altova.mapforce.IEnumerable var1_join)	{
			this.var1_join = var1_join;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq93_join closure;
			IEnumerator var2_join;
			IEnumerator var3_as_object;
			IEnumerator var4_object_member_by_name;
			IEnumerator var5_as_object;
			IEnumerator var6_object_member_by_name;
			IEnumerator var7_as_string;
			com.altova.mapforce.IEnumerable var8_object_member_by_name;
			boolean var9_logical_and;
			boolean var10_any;
			boolean var11_logical_and;

			public Enumerator(seq93_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_join = (closure.var1_join).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_join.moveNext()) {state = 3; return false; }
				var3_as_object = (com.altova.functions.Json.AsObject(((com.altova.json.Value)(var2_join.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_join != null ) { var2_join.close(); var2_join = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_as_object.moveNext()) {state = 5; return false; }
				var4_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var3_as_object.current())), "field54B")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_object_member_by_name.moveNext()) {state = 7; return false; }
				var5_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var4_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_as_object.moveNext()) {state = 9; return false; }
				var6_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var5_as_object.current())), "location")).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_as_object != null ) { var5_as_object.close(); var5_as_object = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_object_member_by_name.moveNext()) {state = 11; return false; }
				var7_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var6_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_object_member_by_name != null ) { var6_object_member_by_name.close(); var6_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_as_string.moveNext()) {state = 13; return false; }
				var8_object_member_by_name = new com.altova.functions.Core.SequenceCache(com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var3_as_object.current())), "field53D"));
				var9_logical_and = com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq94_map(var8_object_member_by_name))))), com.altova.functions.Core.logicalAnd(com.altova.functions.Core.logicalAnd((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq95_map(((com.altova.json.Value)(var3_as_object.current()))))))), com.altova.CoreTypes.parseBoolean("true")), (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq96_map(((com.altova.json.Value)(var3_as_object.current())))))))));
				var10_any = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq97_map(var8_object_member_by_name)))));
				var11_logical_and = com.altova.functions.Core.logicalAnd(var9_logical_and, var10_any);
				if (!(com.altova.functions.Core.logicalNot((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq98_cond_map(var10_any, var8_object_member_by_name, var9_logical_and, var11_logical_and)))))))) {state = 12; return false; }
				current = var7_as_string.current();
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_as_string != null ) { var7_as_string.close(); var7_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var7_as_string != null ) { var7_as_string.close(); var7_as_string = null; }
					if( var6_object_member_by_name != null ) { var6_object_member_by_name.close(); var6_object_member_by_name = null; }
					if( var5_as_object != null ) { var5_as_object.close(); var5_as_object = null; }
					if( var4_object_member_by_name != null ) { var4_object_member_by_name.close(); var4_object_member_by_name = null; }
					if( var3_as_object != null ) { var3_as_object.close(); var3_as_object = null; }
					if( var2_join != null ) { var2_join.close(); var2_join = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq94_map implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_object_member_by_name;

		public seq94_map(com.altova.mapforce.IEnumerable var1_object_member_by_name)	{
			this.var1_object_member_by_name = var1_object_member_by_name;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq94_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq94_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (closure.var1_object_member_by_name).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq95_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq95_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq95_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq95_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54A")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq96_map implements IEnumerable {
		com.altova.json.Value var1_cur;

		public seq96_map(com.altova.json.Value var1_cur)	{
			this.var1_cur = var1_cur;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq96_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq96_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (com.altova.functions.Json.GetMemberByName(closure.var1_cur, "field54D")).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = com.altova.functions.Core.exists(com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var2_object_member_by_name.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq97_map implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_object_member_by_name;

		public seq97_map(com.altova.mapforce.IEnumerable var1_object_member_by_name)	{
			this.var1_object_member_by_name = var1_object_member_by_name;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq97_map closure;
			IEnumerator var2_object_member_by_name;

			public Enumerator(seq97_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_object_member_by_name = (closure.var1_object_member_by_name).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_object_member_by_name.moveNext()) {state = 3; return false; }
				current = (Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq33_map(((com.altova.json.Member)(var2_object_member_by_name.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_object_member_by_name != null ) { var2_object_member_by_name.close(); var2_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq98_cond_map implements IEnumerable {
		boolean var1_any;
		com.altova.mapforce.IEnumerable var2_object_member_by_name;
		boolean var3_logical_and;
		boolean var4_logical_and;

		public seq98_cond_map(boolean var1_any, com.altova.mapforce.IEnumerable var2_object_member_by_name, boolean var3_logical_and, boolean var4_logical_and)	{
			this.var1_any = var1_any;
			this.var2_object_member_by_name = var2_object_member_by_name;
			this.var3_logical_and = var3_logical_and;
			this.var4_logical_and = var4_logical_and;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq98_cond_map closure;
			IEnumerator var5_if_any;

			public Enumerator(seq98_cond_map closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!((Boolean)com.altova.functions.Core.first((new seq99_if_logical_and(closure.var1_any, closure.var4_logical_and))))) {state = 0; return false; }
				var5_if_any = ((new seq100_if_any(closure.var2_object_member_by_name, closure.var3_logical_and, closure.var4_logical_and))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 3;				
				if (!var5_if_any.moveNext()) {state = 4; return false; }
				current = com.altova.CoreTypes.parseBoolean(((java.lang.String)(var5_if_any.current())));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var5_if_any != null ) { var5_if_any.close(); var5_if_any = null; }
				return false;
			}


			public void close() {
				try {
					if( var5_if_any != null ) { var5_if_any.close(); var5_if_any = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq99_if_logical_and implements IEnumerable {
		boolean var1_any;
		boolean var2_logical_and;

		public seq99_if_logical_and(boolean var1_any, boolean var2_logical_and)	{
			this.var1_any = var1_any;
			this.var2_logical_and = var2_logical_and;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq99_if_logical_and closure;

			public Enumerator(seq99_if_logical_and closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(closure.var2_logical_and)) {state = 2; return false; }
				current = closure.var1_any;
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("true");
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq100_if_any implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_object_member_by_name;
		boolean var2_logical_and;
		boolean var3_logical_and;

		public seq100_if_any(com.altova.mapforce.IEnumerable var1_object_member_by_name, boolean var2_logical_and, boolean var3_logical_and)	{
			this.var1_object_member_by_name = var1_object_member_by_name;
			this.var2_logical_and = var2_logical_and;
			this.var3_logical_and = var3_logical_and;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq100_if_any closure;

			public Enumerator(seq100_if_any closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!((Boolean)com.altova.functions.Core.first((new seq11_CoreAny((new seq101_last(closure.var1_object_member_by_name, closure.var3_logical_and))))))) {state = 2; return false; }
				current = "true";
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.logicalAnd(closure.var2_logical_and, com.altova.CoreTypes.parseBoolean("true")))) {state = 0; return false; }
				current = "false";
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq101_last implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_object_member_by_name;
		boolean var2_logical_and;

		public seq101_last(com.altova.mapforce.IEnumerable var1_object_member_by_name, boolean var2_logical_and)	{
			this.var1_object_member_by_name = var1_object_member_by_name;
			this.var2_logical_and = var2_logical_and;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq101_last closure;
			java.lang.String var3_last;

			public Enumerator(seq101_last closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var3_last = (java.lang.String)com.altova.functions.Core.last((new seq102_if_logical_and(closure.var1_object_member_by_name, closure.var2_logical_and)));
				current = com.altova.functions.Core.logicalNot(com.altova.functions.Core.startsWith(var3_last, "/"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.startsWith(var3_last, "/CH");
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq102_if_logical_and implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_object_member_by_name;
		boolean var2_logical_and;

		public seq102_if_logical_and(com.altova.mapforce.IEnumerable var1_object_member_by_name, boolean var2_logical_and)	{
			this.var1_object_member_by_name = var1_object_member_by_name;
			this.var2_logical_and = var2_logical_and;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq102_if_logical_and closure;
			IEnumerator var3_object_member_by_name;
			IEnumerator var4_as_object;
			IEnumerator var5_object_member_by_name;
			IEnumerator var6_as_string;

			public Enumerator(seq102_if_logical_and closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 3;				
				if (!(closure.var2_logical_and)) {state = 2; return false; }
				var3_object_member_by_name = (closure.var1_object_member_by_name).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = "IsAccount";
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_object_member_by_name.moveNext()) {state = 4; return false; }
				var4_as_object = (com.altova.functions.Json.AsObject(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var3_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 0;				
				if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_as_object.moveNext()) {state = 6; return false; }
				var5_object_member_by_name = (com.altova.functions.Json.GetMemberByName(((com.altova.json.Value)(var4_as_object.current())), "account")).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var5_object_member_by_name.moveNext()) {state = 8; return false; }
				var6_as_string = (com.altova.functions.Json.AsString(com.altova.functions.Json.GetMemberValue(((com.altova.json.Member)(var5_object_member_by_name.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_object_member_by_name != null ) { var5_object_member_by_name.close(); var5_object_member_by_name = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var6_as_string.moveNext()) {state = 10; return false; }
				current = var6_as_string.current();
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var6_as_string != null ) { var6_as_string.close(); var6_as_string = null; }
				return false;
			}


			public void close() {
				try {
					if( var6_as_string != null ) { var6_as_string.close(); var6_as_string = null; }
					if( var5_object_member_by_name != null ) { var5_object_member_by_name.close(); var5_object_member_by_name = null; }
					if( var4_as_object != null ) { var4_as_object.close(); var4_as_object = null; }
					if( var3_object_member_by_name != null ) { var3_object_member_by_name.close(); var3_object_member_by_name = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class Outer implements IEnumerable {
		com.altova.mapforce.IMFNode var1_MasterFieldsV5_Instance;

		public Outer(com.altova.mapforce.IMFNode var1_MasterFieldsV5_Instance)	{
			this.var1_MasterFieldsV5_Instance = var1_MasterFieldsV5_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			Outer closure;
			IEnumerator var2_as_object;

			public Enumerator(Outer closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_as_object = ((new Main(closure.var1_MasterFieldsV5_Instance))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_as_object.moveNext()) {state = 3; return false; }
				current = var2_as_object.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_as_object != null ) { var2_as_object.close(); var2_as_object = null; }
				} catch (Exception e) {
				}
			}
		}
	}


	// instances
	protected com.altova.json.Document varMasterFieldsV54Instance;

	public String run(String MasterFieldsV54SourceFilename) throws Exception {
		try(
			// open source streams
			com.altova.io.FileInput MasterFieldsV54Source = new com.altova.io.FileInput(MasterFieldsV54SourceFilename);

		) {
			// run
		String varresult5TargetParameter =		run(MasterFieldsV54Source);

			return varresult5TargetParameter;
		}
	}


	// main entry point

	public String run(com.altova.io.Input MasterFieldsV54Source) throws Exception {
		try {
			// Open the source(s)
				varMasterFieldsV54Instance = com.altova.functions.Json.Load(MasterFieldsV54Source, MapForceJsonLibs_MasterFieldsV5.Schemas, false, false);
				if (runDoesCloseAll)
					MasterFieldsV54Source.close();

			// Create the target

			// Execute mapping

			Main mapping = new Main(varMasterFieldsV54Instance);

			String varresult5TargetParameter = com.altova.functions.Core.last(mapping).toString();
			
			// Close the target

			return varresult5TargetParameter;

		}
		finally {

			if (runDoesCloseAll) {
				MasterFieldsV54Source.close();
			}

		}
	}


}
